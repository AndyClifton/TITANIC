function SubWriteSonicDataMATLAB(sonic_data,...
    sonic_clean_time,...
    sonic_rotated_time,...
	output_path,output_file)

%% empty variables, labels, data and attributes
VAL = {};
VNAME ={};
VLABEL= {};
UNITS = {};
HEIGHT = {};

%% individual channel statistics

% define labels
labels = {'x_clean';...
	'y_clean';...
	'z_clean';...
	'Temp_clean';
	'u';...
	'v';...
	'w';...
	'Temp_rotated'};
% define fields
fields = {'clean';...
	'clean';...
	'clean';...
	'clean';...
	'rot';...
	'rot';...
	'rot';...
	'rot'};
% define sub fields
subfields = {'x';...
	'y';...
	'z';...
	'T';...
	'u';...
	'v';...
	'w';...
	'T'};
% units
units = {'m/s';...
	'm/s';...
	'm/s';...
	'K';...
	'm/s';...
	'm/s';...
	'm/s';...
	'K'};

for si = 1:numel(sonic_data)
	if ~isempty(sonic_data{si})
		% figure out which sonic we are dealing with
		vname_root = 'Sonic';
		z = sonic_data{si}.height;
		for fi = 1:numel(labels)
			% get the variable name
			vname_sub = labels{fi};
			% get the data
			VAL{end+1} = reshape(sonic_data{si}.(fields{fi}).(subfields{fi}),[],1);
			% get the final name that we will use in the output
			% file
			VNAME{end+1} = [vname_root '_' vname_sub '_' num2str(z) 'm'];
			% create a label for figures
			VLABEL{end+1} = [strrep(vname_sub,'_',' ') ' (' num2str(z) ' m)'];
			% define units
			UNITS{end+1} = units{si};
			% and the height
			HEIGHT{end+1} = z;
		end
	end
end

% get the sonic timestamp
VNAME{end+1} = 'Sonic_cleaned_timestamp';
VLABEL{end+1} = 'Cleaned timestamps';
VAL{end+1} = reshape(sonic_clean_time,[],1);
UNITS{end+1} = 'elapsed time [s]';
HEIGHT{end+1} = NaN;

VNAME{end+1} = 'Sonic_rotated_timestamp';
VLABEL{end+1} = 'Rotated timestamps';
VAL{end+1} = reshape(sonic_rotated_time,[],1);
UNITS{end+1} = 'elapsed time [s]';
HEIGHT{end+1} = NaN;

%% export the data
for vi = 1:numel(VNAME)
	% make a new variable
	data_out.(VNAME{vi}).val = VAL{vi};
	data_out.(VNAME{vi}).label = VLABEL{vi};
	data_out.(VNAME{vi}).units = UNITS{vi};
	data_out.(VNAME{vi}).height = HEIGHT{vi};
end

%% and write it out
save(fullfile(output_path,output_file),'-struct','data_out','-append')